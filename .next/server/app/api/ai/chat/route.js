(()=>{var e={};e.id=1337,e.ids=[1337],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},4936:(e,t,r)=>{"use strict";r.d(t,{A:()=>c});var o=r(79748),s=r(33873);let a=require("os"),i=async()=>{let e=a.homedir();for(let t of[s.join(process.cwd(),".z-ai-config"),s.join(e,".z-ai-config"),"/etc/.z-ai-config"])try{let e=await o.readFile(t,"utf-8"),r=JSON.parse(e);if(r.baseUrl&&r.apiKey)return r}catch(e){"ENOENT"!==e.code&&console.error(`Error reading or parsing config file at ${t}:`,e)}throw Error("Configuration file not found or invalid. Please create .z-ai-config in your project, home directory, or /etc.")};class n{constructor(e){this.config=e,this.chat={completions:{create:this.createChatCompletion.bind(this)}},this.images={generations:{create:this.createImageGeneration.bind(this)}},this.functions={invoke:this.invokeFunction.bind(this)}}static async create(){return new n(await i())}async createChatCompletion(e){let{baseUrl:t,chatId:r,userId:o,apiKey:s}=this.config,a=`${t}/chat/completions`,i={"Content-Type":"application/json",Authorization:`Bearer ${s}`,"X-Z-AI-From":"Z"};r&&(i["X-Chat-Id"]=r),o&&(i["X-User-Id"]=o);try{let t=await fetch(a,{method:"POST",headers:i,body:JSON.stringify(e)});if(!t.ok){let e=await t.text();throw Error(`API request failed with status ${t.status}: ${e}`)}return await t.json()}catch(e){throw console.error("Failed to make API request:",e),e}}async createImageGeneration(e){let{baseUrl:t,apiKey:r,chatId:o,userId:s}=this.config,a=`${t}/images/generations`,i={"Content-Type":"application/json",Authorization:`Bearer ${r}`,"X-Z-AI-From":"Z"};o&&(i["X-Chat-Id"]=o),s&&(i["X-User-Id"]=s);let n={...e};try{let e=await fetch(a,{method:"POST",headers:i,body:JSON.stringify(n)});if(!e.ok){let t=await e.text();throw Error(`API request failed with status ${e.status}: ${t}`)}let t=await e.json(),r=await Promise.all(t.data.map(async e=>e.url?{base64:await this.downloadImageAsBase64(e.url),format:"png"}:e));return{...t,data:r}}catch(e){throw console.error("Failed to make image generation request:",e),e}}async downloadImageAsBase64(e){try{let t=await fetch(e);if(!t.ok)throw Error(`Failed to download image: ${t.status}`);let r=await t.arrayBuffer(),o=Buffer.from(r).toString("base64");return`${o}`}catch(e){throw console.error("Failed to download and convert image to base64:",e),e}}async invokeFunction(e,t){let{baseUrl:r,apiKey:o,chatId:s,userId:a}=this.config,i=`${r}/functions/invoke`,n={"Content-Type":"application/json",Authorization:`Bearer ${o}`,"X-Z-AI-From":"Z"};s&&(n["X-Chat-Id"]=s),a&&(n["X-User-Id"]=a);try{let r=await fetch(i,{method:"POST",headers:n,body:JSON.stringify({function_name:e,arguments:t})});if(!r.ok){let e=await r.text();throw Error(`Function invoke failed with status ${r.status}: ${e}`)}return(await r.json()).result}catch(e){throw console.error("Failed to invoke remote function:",e),e}}}let c=n},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},33873:e=>{"use strict";e.exports=require("path")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},65002:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>m,routeModule:()=>l,serverHooks:()=>h,workAsyncStorage:()=>p,workUnitAsyncStorage:()=>d});var o={};r.r(o),r.d(o,{POST:()=>u});var s=r(96559),a=r(48088),i=r(37719),n=r(32190),c=r(4936);async function u(e){try{let{message:t,storeContext:r,conversationHistory:o}=await e.json();if(!t)return n.NextResponse.json({error:"Message is required"},{status:400});let s=await c.A.create(),a=`You are a helpful AI customer service assistant for an e-commerce store. 

Store Context:
${r?`
- Store Name: ${r.name||"Online Store"}
- Store Description: ${r.description||"A modern e-commerce store"}
- Products: ${r.products?.slice(0,5).map(e=>`${e.name} - $${e.price}`).join("\n")||"Various products available"}
`:"You are helping with a general e-commerce store."}

Your role:
1. Be friendly, professional, and helpful
2. Help customers find products and answer questions
3. Provide information about products, pricing, and policies
4. Assist with order inquiries and support
5. If you don't know something, be honest and suggest contacting human support
6. Keep responses concise but informative
7. Always maintain a positive and helpful tone

Guidelines:
- If customers ask about specific products, mention available options
- For pricing questions, be clear about costs
- For shipping, mention standard policies (3-5 business days unless specified)
- For returns, mention 30-day return policy
- For technical issues, suggest basic troubleshooting or human support
- Always end with a helpful question or offer of further assistance`,i=[{role:"system",content:a}];o&&Array.isArray(o)&&o.forEach(e=>{i.push({role:e.role,content:e.content})}),i.push({role:"user",content:t});let u=await s.chat.completions.create({messages:i,temperature:.7,max_tokens:500}),l=u.choices[0]?.message?.content;if(!l)throw Error("No response from AI");return n.NextResponse.json({success:!0,response:l})}catch(e){return console.error("Error in AI chat:",e),n.NextResponse.json({error:"Failed to process chat message",details:e.message},{status:500})}}let l=new s.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/ai/chat/route",pathname:"/api/ai/chat",filename:"route",bundlePath:"app/api/ai/chat/route"},resolvedPagePath:"/home/runner/work/sellor-ai-ecommerce/sellor-ai-ecommerce/src/app/api/ai/chat/route.ts",nextConfigOutput:"",userland:o}),{workAsyncStorage:p,workUnitAsyncStorage:d,serverHooks:h}=l;function m(){return(0,i.patchFetch)({workAsyncStorage:p,workUnitAsyncStorage:d})}},78335:()=>{},79748:e=>{"use strict";e.exports=require("fs/promises")},96487:()=>{}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),o=t.X(0,[4447,580],()=>r(65002));module.exports=o})();